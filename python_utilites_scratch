data = [1,2,3,4,5,6, 7, 8, 9 , 10]  #take every two number of a list IMP
for i,k in zip(data[0::2], data[1::2]):
    print i

data = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]  #separate list in other list with each 2 elements
data_each_Two = [data[i:i+2] for i in range(0, len(data), 1)]

a = ["foo", "bar"]
b = [1, 2, 3]
list_combined = [(x,y) for x in a for y in b] #all possible combinations between two list


data = [1,2,3,4,5,6, 7, 8, 9 , 10]
max_value = None  #find the max value of a list
for num in data:
    if (max_value is None or num > max_value):
        max_value = num
 
number = 1.32422453432
num_formatted = '{0:.3g}'.format(number) #format a number at second deximal



sourceMesh = cmds.ls(sl=True)[0].split('.')[0] #query skinCluster for current mesh
ls_History = cmds.listHistory(sourceMesh)
skinCl_source = cmds.ls(ls_History, type='skinCluster')



vertex_values_r = [] #creation of a list with sublistes with 3 elements(vertex + weight + attachment_name)
for w, v, at in zip(attach_weight_ls_TOT, n_vertex, atch_ls):
    list1 = []
    list1.append(v)
    f = float(w[0])
    list1.append(f)
    list1.append(at)
    vertex_values_r.append(list1)
    
    
    
    
myList = ['a', 'b', 'a', 'c', 'b', 'a', 'c', 'd', 'd']  #check if a list has duplicates and returnes the duplicates only
dupl = [myList[i] for i in range(len(myList)) if i == myList.index(myList[i])]

